apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.base.compileSdkVersion
    buildToolsVersion rootProject.ext.base.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.base.minSdkVersion
        targetSdkVersion rootProject.ext.base.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["constraintlayout"]
    //http
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["converter-scalars"]
    api rootProject.ext.dependencies["retrofit"]
    //rx
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["adapter-rxjava2"]
    api rootProject.ext.dependencies["rxlifecycle"]
    //butterknife
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    api rootProject.ext.dependencies["javax_annotation"]
    //dagger
    api rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    api rootProject.ext.dependencies["dagger-android"]
    api rootProject.ext.dependencies["dagger-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    api rootProject.ext.dependencies["javax_annotation"]
    //db
    api rootProject.ext.dependencies["greendao"]
    //db
    api rootProject.ext.dependencies["json"]
    //xLog
    api rootProject.ext.dependencies["mars-core"]
    //websocket
    api rootProject.ext.dependencies["websocket"]
    //queue
    api rootProject.ext.dependencies["queue"]
    //ui
    api rootProject.ext.dependencies["qmui"]
    //ui
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    //Loader
    api rootProject.ext.dependencies["loader"]
    //二维码
    api rootProject.ext.dependencies["zxing"]
    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]
    api rootProject.ext.dependencies["oss"]
}